import{E as N,R as $,C as h}from"./editor.api.C1vQ_HcD.js";import{R as I,l as o,E as A}from"./editor.DUpSOAQE.js";const i="vs/platform/theme/common/tokenClassificationRegistry",x="*",M=":",R=".",p="\\w+[-_\\w+]*",S=`^${p}$`,B=`^(${p}|\\*)(\\${R}${p})*(${M}${p})?$`,j="^(\\s*(italic|bold|underline|strikethrough))*\\s*$";class y{constructor(e,r,n,u,a){this.foreground=e,this.bold=r,this.underline=n,this.strikethrough=u,this.italic=a}}(function(s){function e(t){return{_foreground:t.foreground===void 0?null:h.Format.CSS.formatHexA(t.foreground,!0),_bold:t.bold===void 0?null:t.bold,_underline:t.underline===void 0?null:t.underline,_italic:t.italic===void 0?null:t.italic,_strikethrough:t.strikethrough===void 0?null:t.strikethrough}}s.toJSONObject=e;function r(t){if(t){const c=d=>typeof d=="boolean"?d:void 0,f=d=>typeof d=="string"?h.fromHex(d):void 0;return new s(f(t._foreground),c(t._bold),c(t._underline),c(t._strikethrough),c(t._italic))}}s.fromJSONObject=r;function n(t,c){return t===c?!0:t!==void 0&&c!==void 0&&(t.foreground instanceof h?t.foreground.equals(c.foreground):c.foreground===void 0)&&t.bold===c.bold&&t.underline===c.underline&&t.strikethrough===c.strikethrough&&t.italic===c.italic}s.equals=n;function u(t){return t instanceof s}s.is=u;function a(t){return new s(t.foreground,t.bold,t.underline,t.strikethrough,t.italic)}s.fromData=a;function l(t,c,f,d,m,b){let T;if(t!==void 0&&(T=h.fromHex(t)),c!==void 0){f=b=d=m=!1;const E=/italic|bold|underline|strikethrough/g;let O;for(;O=E.exec(c);)switch(O[0]){case"bold":f=!0;break;case"italic":b=!0;break;case"underline":d=!0;break;case"strikethrough":m=!0;break}}return new s(T,f,d,m,b)}s.fromSettings=l})(y||(y={}));var C;(function(s){function e(a,l){if(l&&typeof l._selector=="string"&&l._style){const t=y.fromJSONObject(l._style);if(t)try{return{selector:a.parseTokenSelector(l._selector),style:t}}catch{}}}s.fromJSONObject=e;function r(a){return{_selector:a.selector.id,_style:y.toJSONObject(a.style)}}s.toJSONObject=r;function n(a,l){return a===l?!0:a!==void 0&&l!==void 0&&a.selector&&l.selector&&a.selector.id===l.selector.id&&y.equals(a.style,l.style)}s.equals=n;function u(a){return a&&a.selector&&typeof a.selector.id=="string"&&y.is(a.style)}s.is=u})(C||(C={}));const L={TokenClassificationContribution:"base.contributions.tokenClassification"};class H{constructor(){this._onDidChangeSchema=new A,this.onDidChangeSchema=this._onDidChangeSchema.event,this.currentTypeNumber=0,this.currentModifierBit=1,this.tokenStylingDefaultRules=[],this.tokenStylingSchema={type:"object",properties:{},patternProperties:{[B]:k()},additionalProperties:!1,definitions:{style:{type:"object",description:o(i,0,"Colors and styles for the token."),properties:{foreground:{type:"string",description:o(i,1,"Foreground color for the token."),format:"color-hex",default:"#ff0000"},background:{type:"string",deprecationMessage:o(i,2,"Token background colors are currently not supported.")},fontStyle:{type:"string",description:o(i,3,"Sets the all font styles of the rule: 'italic', 'bold', 'underline' or 'strikethrough' or a combination. All styles that are not listed are unset. The empty string unsets all styles."),pattern:j,patternErrorMessage:o(i,4,"Font style must be 'italic', 'bold', 'underline' or 'strikethrough' or a combination. The empty string unsets all styles."),defaultSnippets:[{label:o(i,5,"None (clear inherited style)"),bodyText:'""'},{body:"italic"},{body:"bold"},{body:"underline"},{body:"strikethrough"},{body:"italic bold"},{body:"italic underline"},{body:"italic strikethrough"},{body:"bold underline"},{body:"bold strikethrough"},{body:"underline strikethrough"},{body:"italic bold underline"},{body:"italic bold strikethrough"},{body:"italic underline strikethrough"},{body:"bold underline strikethrough"},{body:"italic bold underline strikethrough"}]},bold:{type:"boolean",description:o(i,6,"Sets or unsets the font style to bold. Note, the presence of 'fontStyle' overrides this setting.")},italic:{type:"boolean",description:o(i,7,"Sets or unsets the font style to italic. Note, the presence of 'fontStyle' overrides this setting.")},underline:{type:"boolean",description:o(i,8,"Sets or unsets the font style to underline. Note, the presence of 'fontStyle' overrides this setting.")},strikethrough:{type:"boolean",description:o(i,9,"Sets or unsets the font style to strikethrough. Note, the presence of 'fontStyle' overrides this setting.")}},defaultSnippets:[{body:{foreground:"${1:#FF0000}",fontStyle:"${2:bold}"}}]}}},this.tokenTypeById=Object.create(null),this.tokenModifierById=Object.create(null),this.typeHierarchy=Object.create(null)}registerTokenType(e,r,n,u){if(!e.match(S))throw new Error("Invalid token type id.");if(n&&!n.match(S))throw new Error("Invalid token super type id.");const l={num:this.currentTypeNumber++,id:e,superType:n,description:r,deprecationMessage:u};this.tokenTypeById[e]=l;const t=k(r,u);this.tokenStylingSchema.properties[e]=t,this.typeHierarchy=Object.create(null)}registerTokenModifier(e,r,n){if(!e.match(S))throw new Error("Invalid token modifier id.");const u=this.currentModifierBit;this.currentModifierBit=this.currentModifierBit*2;const a={num:u,id:e,description:r,deprecationMessage:n};this.tokenModifierById[e]=a,this.tokenStylingSchema.properties[`*.${e}`]=k(r,n)}parseTokenSelector(e,r){const n=P(e,r);return n.type?{match:(u,a,l)=>{let t=0;if(n.language!==void 0){if(n.language!==l)return-1;t+=10}if(n.type!==x){const f=this.getTypeHierarchy(u).indexOf(n.type);if(f===-1)return-1;t+=100-f}for(const c of n.modifiers)if(a.indexOf(c)===-1)return-1;return t+n.modifiers.length*100},id:`${[n.type,...n.modifiers.sort()].join(".")}${n.language!==void 0?":"+n.language:""}`}:{match:()=>-1,id:"$invalid"}}registerTokenStyleDefault(e,r){this.tokenStylingDefaultRules.push({selector:e,defaults:r})}deregisterTokenStyleDefault(e){const r=e.id;this.tokenStylingDefaultRules=this.tokenStylingDefaultRules.filter(n=>n.selector.id!==r)}deregisterTokenType(e){delete this.tokenTypeById[e],delete this.tokenStylingSchema.properties[e],this.typeHierarchy=Object.create(null)}deregisterTokenModifier(e){delete this.tokenModifierById[e],delete this.tokenStylingSchema.properties[`*.${e}`]}getTokenTypes(){return Object.keys(this.tokenTypeById).map(e=>this.tokenTypeById[e])}getTokenModifiers(){return Object.keys(this.tokenModifierById).map(e=>this.tokenModifierById[e])}getTokenStylingSchema(){return this.tokenStylingSchema}getTokenStylingDefaultRules(){return this.tokenStylingDefaultRules}getTypeHierarchy(e){let r=this.typeHierarchy[e];if(!r){this.typeHierarchy[e]=r=[e];let n=this.tokenTypeById[e];for(;n&&n.superType;)r.push(n.superType),n=this.tokenTypeById[n.superType]}return r}toString(){const e=(r,n)=>{const u=r.indexOf(".")===-1?0:1,a=n.indexOf(".")===-1?0:1;return u!==a?u-a:r.localeCompare(n)};return Object.keys(this.tokenTypeById).sort(e).map(r=>`- \`${r}\`: ${this.tokenTypeById[r].description}`).join(`
`)}}const v=M.charCodeAt(0),J=R.charCodeAt(0);function P(s,e){let r=s.length,n=e;const u=[];for(let l=r-1;l>=0;l--){const t=s.charCodeAt(l);if(t===v||t===J){const c=s.substring(l+1,r);r=l,t===v?n=c:u.push(c)}}return{type:s.substring(0,r),modifiers:u,language:n}}const g=F();I.add(L.TokenClassificationContribution,g);function F(){const s=new H;function e(n,u,a=[],l,t){return s.registerTokenType(n,u,l,t),a&&r(n,a),n}function r(n,u){try{const a=s.parseTokenSelector(n);s.registerTokenStyleDefault(a,{scopesToProbe:u})}catch(a){console.log(a)}}return e("comment",o(i,10,"Style for comments."),[["comment"]]),e("string",o(i,11,"Style for strings."),[["string"]]),e("keyword",o(i,12,"Style for keywords."),[["keyword.control"]]),e("number",o(i,13,"Style for numbers."),[["constant.numeric"]]),e("regexp",o(i,14,"Style for expressions."),[["constant.regexp"]]),e("operator",o(i,15,"Style for operators."),[["keyword.operator"]]),e("namespace",o(i,16,"Style for namespaces."),[["entity.name.namespace"]]),e("type",o(i,17,"Style for types."),[["entity.name.type"],["support.type"]]),e("struct",o(i,18,"Style for structs."),[["entity.name.type.struct"]]),e("class",o(i,19,"Style for classes."),[["entity.name.type.class"],["support.class"]]),e("interface",o(i,20,"Style for interfaces."),[["entity.name.type.interface"]]),e("enum",o(i,21,"Style for enums."),[["entity.name.type.enum"]]),e("typeParameter",o(i,22,"Style for type parameters."),[["entity.name.type.parameter"]]),e("function",o(i,23,"Style for functions"),[["entity.name.function"],["support.function"]]),e("member",o(i,24,"Style for member functions"),[],"method","Deprecated use `method` instead"),e("method",o(i,25,"Style for method (member functions)"),[["entity.name.function.member"],["support.function"]]),e("macro",o(i,26,"Style for macros."),[["entity.name.function.preprocessor"]]),e("variable",o(i,27,"Style for variables."),[["variable.other.readwrite"],["entity.name.variable"]]),e("parameter",o(i,28,"Style for parameters."),[["variable.parameter"]]),e("property",o(i,29,"Style for properties."),[["variable.other.property"]]),e("enumMember",o(i,30,"Style for enum members."),[["variable.other.enummember"]]),e("event",o(i,31,"Style for events."),[["variable.other.event"]]),e("decorator",o(i,32,"Style for decorators & annotations."),[["entity.name.decorator"],["entity.name.function"]]),e("label",o(i,33,"Style for labels. "),void 0),s.registerTokenModifier("declaration",o(i,34,"Style for all symbol declarations."),void 0),s.registerTokenModifier("documentation",o(i,35,"Style to use for references in documentation."),void 0),s.registerTokenModifier("static",o(i,36,"Style to use for symbols that are static."),void 0),s.registerTokenModifier("abstract",o(i,37,"Style to use for symbols that are abstract."),void 0),s.registerTokenModifier("deprecated",o(i,38,"Style to use for symbols that are deprecated."),void 0),s.registerTokenModifier("modification",o(i,39,"Style to use for write accesses."),void 0),s.registerTokenModifier("async",o(i,40,"Style to use for symbols that are async."),void 0),s.registerTokenModifier("readonly",o(i,41,"Style to use for symbols that are read-only."),void 0),r("variable.readonly",[["variable.other.constant"]]),r("property.readonly",[["variable.other.constant.property"]]),r("type.defaultLibrary",[["support.type"]]),r("class.defaultLibrary",[["support.class"]]),r("interface.defaultLibrary",[["support.class"]]),r("variable.defaultLibrary",[["support.variable"],["support.other.variable"]]),r("variable.defaultLibrary.readonly",[["support.constant"]]),r("property.defaultLibrary",[["support.variable.property"]]),r("property.defaultLibrary.readonly",[["support.constant.property"]]),r("function.defaultLibrary",[["support.function"]]),r("member.defaultLibrary",[["support.function"]]),s}function U(){return g}function k(s,e){return{description:s,deprecationMessage:e,defaultSnippets:[{body:"${1:#ff0000}"}],anyOf:[{type:"string",format:"color-hex"},{$ref:"#/definitions/style"}]}}const w="vscode://schemas/token-styling",D=I.as(N.JSONContribution);D.registerSchema(w,g.getTokenStylingSchema());const _=new $(()=>D.notifySchemaChanged(w),200);g.onDidChangeSchema(()=>{_.isScheduled()||_.schedule()});export{C as S,y as T,S as a,U as g,P as p,w as t};
//# sourceMappingURL=tokenClassificationRegistry.DDNqQCr5.js.map

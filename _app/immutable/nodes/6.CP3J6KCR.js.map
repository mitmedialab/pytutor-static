{"version":3,"file":"6.CP3J6KCR.js","sources":["../../../../../../src/lib/whiteboard/liveblocks-example/types.ts","../../../../../../src/lib/whiteboard/liveblocks-example/utils.ts","../../../../../../src/lib/whiteboard/liveblocks-example/hooks/useSelectionBounds.ts","../../../../../../src/lib/whiteboard/liveblocks-example/components/SelectionBox.tsx","../../../../../../node_modules/nanoid/url-alphabet/index.js","../../../../../../node_modules/nanoid/index.browser.js","../../../../../../src/lib/whiteboard/liveblocks-example/components/Ellipse.tsx","../../../../../../node_modules/perfect-freehand/dist/esm/index.mjs","../../../../../../src/lib/whiteboard/liveblocks-example/components/Path.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/Rectangle.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/LayerComponent.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/ColorPicker.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/IconButton.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/hooks/useDeleteLayers.ts","../../../../../../src/lib/whiteboard/liveblocks-example/components/SelectionTools.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/Cursor.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/MultiplayerGuides.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/ToolsBar/PencilButton.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/ToolsBar/RectangleButton.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/ToolsBar/EllipseButton.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/ToolsBar/UndoButton.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/ToolsBar/DownloadButton.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/ToolsBar/RedoButton.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/ToolsBar/SelectionButton.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/components/ToolsBar/index.tsx","../../../../../../src/lib/whiteboard/liveblocks-example/hooks/useDisableScrollBounce.ts","../../../../../../src/lib/whiteboard/liveblocks-example/Whiteboard.tsx","../../../../../../src/routes/_internal/examples/whiteboard/+page.svelte"],"sourcesContent":["export type Color = {\n    r: number;\n    g: number;\n    b: number;\n};\n\nexport enum LayerType {\n    Rectangle,\n    Ellipse,\n    Path,\n}\n\nexport type Camera = {\n    x: number;\n    y: number;\n};\n\nexport type Layer = RectangleLayer | EllipseLayer | PathLayer;\n\nexport type RectangleLayer = {\n    type: LayerType.Rectangle;\n    x: number;\n    y: number;\n    height: number;\n    width: number;\n    fill: Color;\n};\n\nexport type EllipseLayer = {\n    type: LayerType.Ellipse;\n    x: number;\n    y: number;\n    height: number;\n    width: number;\n    fill: Color;\n};\n\nexport type PathLayer = {\n    type: LayerType.Path;\n    x: number;\n    y: number;\n    // Could be computed based on points\n    height: number;\n    // Could be computed based on points\n    width: number;\n    fill: Color;\n    points: number[][];\n    size: number;\n};\n\nexport type Point = {\n    x: number;\n    y: number;\n};\n\nexport type XYWH = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n};\n\nexport enum Side {\n    Top = 1,\n    Bottom = 2,\n    Left = 4,\n    Right = 8,\n}\n\nexport type CanvasState =\n    | {\n        mode: CanvasMode.None;\n    }\n    | {\n        mode: CanvasMode.SelectionNet;\n        origin: Point;\n        current?: Point;\n    }\n    | {\n        mode: CanvasMode.Translating;\n        current: Point;\n    }\n    | {\n        mode: CanvasMode.Inserting;\n        layerType: LayerType.Ellipse | LayerType.Rectangle;\n    }\n    | {\n        mode: CanvasMode.Pencil;\n    }\n    | {\n        mode: CanvasMode.Pressing;\n        origin: Point;\n    }\n    | {\n        mode: CanvasMode.Resizing;\n        initialBounds: XYWH;\n        corner: Side;\n    };\n\nexport enum CanvasMode {\n    /**\n     * Default canvas mode. Nothing is happening.\n     */\n    None,\n    /**\n     * When the user's pointer is pressed\n     */\n    Pressing,\n    /**\n     * When the user is selecting multiple layers at once\n     */\n    SelectionNet,\n    /**\n     * When the user is moving layers\n     */\n    Translating,\n    /**\n     * When the user is going to insert a Rectangle or an Ellipse\n     */\n    Inserting,\n    /**\n     * When the user is resizing a layer\n     */\n    Resizing,\n    /**\n     * When the pencil is activated\n     */\n    Pencil,\n}\n","import {\n    type Color,\n    Side,\n    type EllipseLayer,\n    type Layer,\n    LayerType,\n    type Point,\n    type XYWH,\n    type PathLayer,\n    type Camera,\n} from \"./types\";\n\nexport function colorToCss(color: Color) {\n    return `#${color.r.toString(16).padStart(2, \"0\")}${color.g\n        .toString(16)\n        .padStart(2, \"0\")}${color.b.toString(16).padStart(2, \"0\")}`;\n}\n\nconst COLORS = [\"#DC2626\", \"#D97706\", \"#059669\", \"#7C3AED\", \"#DB2777\"];\n\nexport function connectionIdToColor(connectionId: number): string {\n    return COLORS[connectionId % COLORS.length];\n}\n\nexport function resizeBounds(bounds: XYWH, corner: Side, point: Point): XYWH {\n    const result = {\n        x: bounds.x,\n        y: bounds.y,\n        width: bounds.width,\n        height: bounds.height,\n    };\n\n    if ((corner & Side.Left) === Side.Left) {\n        result.x = Math.min(point.x, bounds.x + bounds.width);\n        result.width = Math.abs(bounds.x + bounds.width - point.x);\n    }\n\n    if ((corner & Side.Right) === Side.Right) {\n        result.x = Math.min(point.x, bounds.x);\n        result.width = Math.abs(point.x - bounds.x);\n    }\n\n    if ((corner & Side.Top) === Side.Top) {\n        result.y = Math.min(point.y, bounds.y + bounds.height);\n        result.height = Math.abs(bounds.y + bounds.height - point.y);\n    }\n\n    if ((corner & Side.Bottom) === Side.Bottom) {\n        result.y = Math.min(point.y, bounds.y);\n        result.height = Math.abs(point.y - bounds.y);\n    }\n\n    return result;\n}\n\nexport function findIntersectingLayerWithPoint(\n    layerIds: string[],\n    layers: Map<string, Layer>,\n    point: Point\n) {\n    for (let i = layerIds.length - 1; i >= 0; i--) {\n        const layerId = layerIds[i];\n        const layer = layers.get(layerId);\n        if (layer && isHittingLayer(layer, point)) {\n            return layerId;\n        }\n    }\n\n    return null;\n}\n\nexport function isHittingLayer(layer: Layer, point: Point) {\n    switch (layer.type) {\n        case LayerType.Ellipse:\n            return isHittingEllipse(layer, point);\n        // TODO: Implement path hit testing instead of using Rectangle hit box\n        case LayerType.Path:\n        case LayerType.Rectangle:\n            return isHittingRectangle(layer, point);\n        default:\n            return false;\n    }\n}\n\nexport function isHittingRectangle(layer: XYWH, point: Point) {\n    return (\n        point.x > layer.x &&\n        point.x < layer.x + layer.width &&\n        point.y > layer.y &&\n        point.y < layer.y + layer.height\n    );\n}\n\nexport function isHittingEllipse(layer: EllipseLayer, point: Point) {\n    const rx = layer.width / 2;\n    const ry = layer.height / 2;\n    const cx = layer.x + layer.width / 2;\n    const cy = layer.y + layer.height / 2;\n\n    const result =\n        Math.pow(point.x - cx, 2) / Math.pow(rx, 2) +\n        Math.pow(point.y - cy, 2) / Math.pow(ry, 2);\n\n    return result <= 1;\n}\n\n/**\n * TODO: Implement ellipse and path / selection net collision\n */\nexport function findIntersectingLayersWithRectangle(\n    layerIds: readonly string[],\n    layers: ReadonlyMap<string, Layer>,\n    a: Point,\n    b: Point\n) {\n    const rect = {\n        x: Math.min(a.x, b.x),\n        y: Math.min(a.y, b.y),\n        width: Math.abs(a.x - b.x),\n        height: Math.abs(a.y - b.y),\n    };\n\n    const ids = [];\n\n    for (const layerId of layerIds) {\n        const layer = layers.get(layerId);\n        if (layer == null) {\n            continue;\n        }\n\n        const { x, y, height, width } = layer;\n        if (\n            rect.x + rect.width > x &&\n            rect.x < x + width &&\n            rect.y + rect.height > y &&\n            rect.y < y + height\n        ) {\n            ids.push(layerId);\n        }\n    }\n\n    return ids;\n}\n\nexport function getSvgPathFromStroke(stroke: number[][]) {\n    if (!stroke.length) return \"\";\n\n    const d = stroke.reduce(\n        (acc, [x0, y0], i, arr) => {\n            const [x1, y1] = arr[(i + 1) % arr.length];\n            acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n            return acc;\n        },\n        [\"M\", ...stroke[0], \"Q\"]\n    );\n\n    d.push(\"Z\");\n    return d.join(\" \");\n}\n\nexport function penPointsToPathLayer(\n    points: number[][],\n    color: Color\n): PathLayer {\n    if (points.length < 2) {\n        throw new Error(\"Can't transform points with less than 2 points\");\n    }\n\n    let left = Number.POSITIVE_INFINITY;\n    let top = Number.POSITIVE_INFINITY;\n    let right = Number.NEGATIVE_INFINITY;\n    let bottom = Number.NEGATIVE_INFINITY;\n\n    for (const point of points) {\n        const [x, y] = point;\n        if (left > x) {\n            left = x;\n        }\n        if (top > y) {\n            top = y;\n        }\n        if (right < x) {\n            right = x;\n        }\n        if (bottom < y) {\n            bottom = y;\n        }\n    }\n\n    return {\n        type: LayerType.Path,\n        x: left,\n        y: top,\n        width: right - left,\n        height: bottom - top,\n        fill: color,\n        points: points.map(([x, y, pressure]) => [x - left, y - top, pressure]),\n    };\n}\n\nexport function pointerEventToCanvasPoint(\n    e: React.PointerEvent,\n    camera: Camera,\n    canvasElement: SVGSVGElement\n): Point {\n    const rect = canvasElement.getBoundingClientRect();\n    return {\n        x: e.clientX - rect.left - camera.x,\n        y: e.clientY - rect.top - camera.y,\n    };\n}\n","// @ts-nocheck\n\nimport { useStorage, useSelf } from \"@liveblocks/react/suspense\";\nimport type { Layer, XYWH } from \"../types\";\nimport { shallow } from \"@liveblocks/react\";\n\nfunction boundingBox(layers: Layer[]): XYWH | null {\n  const first = layers[0];\n  if (!first) {\n    return null;\n  }\n\n  let left = first.x;\n  let right = first.x + first.width;\n  let top = first.y;\n  let bottom = first.y + first.height;\n\n  for (let i = 1; i < layers.length; i++) {\n    const { x, y, width, height } = layers[i];\n    if (left > x) {\n      left = x;\n    }\n    if (right < x + width) {\n      right = x + width;\n    }\n    if (top > y) {\n      top = y;\n    }\n    if (bottom < y + height) {\n      bottom = y + height;\n    }\n  }\n\n  return {\n    x: left,\n    y: top,\n    width: right - left,\n    height: bottom - top,\n  };\n}\n\nexport default function useSelectionBounds() {\n  const selection = useSelf((me) => me.presence.selection);\n  return useStorage((root) => {\n    const selectedLayers = selection\n      .map((layerId) => root.layers.get(layerId)!)\n      .filter(Boolean);\n    return boundingBox(selectedLayers);\n  }, shallow);\n}\n","import { memo } from \"react\";\nimport styles from \"./SelectionBox.module.css\";\nimport useSelectionBounds from \"../hooks/useSelectionBounds\";\nimport { useSelf, useStorage } from \"@liveblocks/react/suspense\";\nimport { LayerType, Side, type XYWH } from \"../types\";\n\ntype SelectionBoxProps = {\n  onResizeHandlePointerDown: (corner: Side, initialBounds: XYWH) => void;\n};\n\nconst HANDLE_WIDTH = 8;\n\nconst SelectionBox = memo(\n  ({ onResizeHandlePointerDown }: SelectionBoxProps) => {\n    // We should show resize handles if exactly one shape is selected and it's\n    // not a path layer\n    const soleLayerId = useSelf((me: any) =>\n      me.presence.selection.length === 1 ? me.presence.selection[0] : null\n    );\n\n    const isShowingHandles = useStorage(\n      (root: any) =>\n        soleLayerId && root.layers.get(soleLayerId)?.type !== LayerType.Path\n    );\n\n    const bounds = useSelectionBounds();\n    if (!bounds) {\n      return null;\n    }\n\n    return (\n      <>\n        <rect\n          className={styles.selection}\n          style={{\n            transform: `translate(${bounds.x}px, ${bounds.y}px)`,\n          }}\n          x={0}\n          y={0}\n          width={bounds.width}\n          height={bounds.height}\n        />\n        {isShowingHandles && (\n          <>\n            <rect\n              className={styles.selection_handle}\n              x={0}\n              y={0}\n              style={{\n                cursor: \"nwse-resize\",\n                width: `${HANDLE_WIDTH}px`,\n                height: `${HANDLE_WIDTH}px`,\n                transform: `translate(${bounds.x - HANDLE_WIDTH / 2}px, ${bounds.y - HANDLE_WIDTH / 2\n                  }px)`,\n              }}\n              onPointerDown={(e) => {\n                e.stopPropagation();\n                onResizeHandlePointerDown(Side.Top + Side.Left, bounds);\n              }}\n            />\n            <rect\n              className={styles.selection_handle}\n              x={0}\n              y={0}\n              style={{\n                cursor: \"ns-resize\",\n                width: `${HANDLE_WIDTH}px`,\n                height: `${HANDLE_WIDTH}px`,\n                transform: `translate(${bounds.x + bounds.width / 2 - HANDLE_WIDTH / 2\n                  }px, ${bounds.y - HANDLE_WIDTH / 2}px)`,\n              }}\n              onPointerDown={(e) => {\n                e.stopPropagation();\n                onResizeHandlePointerDown(Side.Top, bounds);\n              }}\n            />\n            <rect\n              className={styles.selection_handle}\n              x={0}\n              y={0}\n              style={{\n                cursor: \"nesw-resize\",\n                width: `${HANDLE_WIDTH}px`,\n                height: `${HANDLE_WIDTH}px`,\n                transform: `translate(${bounds.x - HANDLE_WIDTH / 2 + bounds.width\n                  }px, ${bounds.y - HANDLE_WIDTH / 2}px)`,\n              }}\n              onPointerDown={(e) => {\n                e.stopPropagation();\n                onResizeHandlePointerDown(Side.Top + Side.Right, bounds);\n              }}\n            />\n            <rect\n              className={styles.selection_handle}\n              x={0}\n              y={0}\n              style={{\n                cursor: \"ew-resize\",\n                width: `${HANDLE_WIDTH}px`,\n                height: `${HANDLE_WIDTH}px`,\n                transform: `translate(${bounds.x - HANDLE_WIDTH / 2 + bounds.width\n                  }px, ${bounds.y + bounds.height / 2 - HANDLE_WIDTH / 2}px)`,\n              }}\n              onPointerDown={(e) => {\n                e.stopPropagation();\n                onResizeHandlePointerDown(Side.Right, bounds);\n              }}\n            />\n            <rect\n              className={styles.selection_handle}\n              x={0}\n              y={0}\n              style={{\n                cursor: \"nwse-resize\",\n                width: `${HANDLE_WIDTH}px`,\n                height: `${HANDLE_WIDTH}px`,\n                transform: `translate(${bounds.x - HANDLE_WIDTH / 2 + bounds.width\n                  }px, ${bounds.y - HANDLE_WIDTH / 2 + bounds.height}px)`,\n              }}\n              onPointerDown={(e) => {\n                e.stopPropagation();\n                onResizeHandlePointerDown(Side.Bottom + Side.Right, bounds);\n              }}\n            />\n            <rect\n              className={styles.selection_handle}\n              x={0}\n              y={0}\n              style={{\n                cursor: \"ns-resize\",\n                width: `${HANDLE_WIDTH}px`,\n                height: `${HANDLE_WIDTH}px`,\n                transform: `translate(${bounds.x + bounds.width / 2 - HANDLE_WIDTH / 2\n                  }px, ${bounds.y - HANDLE_WIDTH / 2 + bounds.height}px)`,\n              }}\n              onPointerDown={(e) => {\n                e.stopPropagation();\n                onResizeHandlePointerDown(Side.Bottom, bounds);\n              }}\n            />\n            <rect\n              className={styles.selection_handle}\n              x={0}\n              y={0}\n              style={{\n                cursor: \"nesw-resize\",\n                width: `${HANDLE_WIDTH}px`,\n                height: `${HANDLE_WIDTH}px`,\n                transform: `translate(${bounds.x - HANDLE_WIDTH / 2}px, ${bounds.y - HANDLE_WIDTH / 2 + bounds.height\n                  }px)`,\n              }}\n              onPointerDown={(e) => {\n                e.stopPropagation();\n                onResizeHandlePointerDown(Side.Bottom + Side.Left, bounds);\n              }}\n            />\n            <rect\n              className={styles.selection_handle}\n              x={0}\n              y={0}\n              style={{\n                cursor: \"ew-resize\",\n                width: `${HANDLE_WIDTH}px`,\n                height: `${HANDLE_WIDTH}px`,\n                transform: `translate(${bounds.x - HANDLE_WIDTH / 2}px, ${bounds.y - HANDLE_WIDTH / 2 + bounds.height / 2\n                  }px)`,\n              }}\n              onPointerDown={(e) => {\n                e.stopPropagation();\n                onResizeHandlePointerDown(Side.Left, bounds);\n              }}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\nexport default SelectionBox;\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import { type EllipseLayer } from \"../types\";\nimport { colorToCss } from \"../utils\";\n\ntype Props = {\n  id: string;\n  layer: EllipseLayer;\n  onPointerDown: (e: React.PointerEvent, id: string) => void;\n  selectionColor?: string;\n};\n\nexport default function Ellipse({\n  layer,\n  onPointerDown,\n  id,\n  selectionColor,\n}: Props) {\n  return (\n    <ellipse\n      onPointerDown={(e) => onPointerDown(e, id)}\n      style={{\n        transform: `translate(${layer.x}px, ${layer.y}px)`,\n      }}\n      cx={layer.width / 2}\n      cy={layer.height / 2}\n      rx={layer.width / 2}\n      ry={layer.height / 2}\n      fill={layer.fill ? colorToCss(layer.fill) : \"#CCC\"}\n      stroke={selectionColor || \"transparent\"}\n      strokeWidth=\"1\"\n    />\n  );\n}\n","function $(e,t,u,x=h=>h){return e*x(.5-t*(.5-u))}function se(e){return[-e[0],-e[1]]}function l(e,t){return[e[0]+t[0],e[1]+t[1]]}function a(e,t){return[e[0]-t[0],e[1]-t[1]]}function b(e,t){return[e[0]*t,e[1]*t]}function he(e,t){return[e[0]/t,e[1]/t]}function R(e){return[e[1],-e[0]]}function B(e,t){return e[0]*t[0]+e[1]*t[1]}function ue(e,t){return e[0]===t[0]&&e[1]===t[1]}function ge(e){return Math.hypot(e[0],e[1])}function de(e){return e[0]*e[0]+e[1]*e[1]}function A(e,t){return de(a(e,t))}function G(e){return he(e,ge(e))}function ie(e,t){return Math.hypot(e[1]-t[1],e[0]-t[0])}function L(e,t,u){let x=Math.sin(u),h=Math.cos(u),y=e[0]-t[0],n=e[1]-t[1],f=y*h-n*x,d=y*x+n*h;return[f+t[0],d+t[1]]}function K(e,t,u){return l(e,b(a(t,e),u))}function ee(e,t,u){return l(e,b(t,u))}var{min:C,PI:xe}=Math,pe=.275,V=xe+1e-4;function ce(e,t={}){let{size:u=16,smoothing:x=.5,thinning:h=.5,simulatePressure:y=!0,easing:n=r=>r,start:f={},end:d={},last:D=!1}=t,{cap:S=!0,easing:j=r=>r*(2-r)}=f,{cap:q=!0,easing:c=r=>--r*r*r+1}=d;if(e.length===0||u<=0)return[];let p=e[e.length-1].runningLength,g=f.taper===!1?0:f.taper===!0?Math.max(u,p):f.taper,T=d.taper===!1?0:d.taper===!0?Math.max(u,p):d.taper,te=Math.pow(u*x,2),_=[],M=[],H=e.slice(0,10).reduce((r,i)=>{let o=i.pressure;if(y){let s=C(1,i.distance/u),W=C(1,1-s);o=C(1,r+(W-r)*(s*pe))}return(r+o)/2},e[0].pressure),m=$(u,h,e[e.length-1].pressure,n),U,X=e[0].vector,z=e[0].point,F=z,O=z,E=F,J=!1;for(let r=0;r<e.length;r++){let{pressure:i}=e[r],{point:o,vector:s,distance:W,runningLength:I}=e[r];if(r<e.length-1&&p-I<3)continue;if(h){if(y){let v=C(1,W/u),Z=C(1,1-v);i=C(1,H+(Z-H)*(v*pe))}m=$(u,h,i,n)}else m=u/2;U===void 0&&(U=m);let le=I<g?j(I/g):1,fe=p-I<T?c((p-I)/T):1;m=Math.max(.01,m*Math.min(le,fe));let re=(r<e.length-1?e[r+1]:e[r]).vector,Y=r<e.length-1?B(s,re):1,be=B(s,X)<0&&!J,ne=Y!==null&&Y<0;if(be||ne){let v=b(R(X),m);for(let Z=1/13,w=0;w<=1;w+=Z)O=L(a(o,v),o,V*w),_.push(O),E=L(l(o,v),o,V*-w),M.push(E);z=O,F=E,ne&&(J=!0);continue}if(J=!1,r===e.length-1){let v=b(R(s),m);_.push(a(o,v)),M.push(l(o,v));continue}let oe=b(R(K(re,s,Y)),m);O=a(o,oe),(r<=1||A(z,O)>te)&&(_.push(O),z=O),E=l(o,oe),(r<=1||A(F,E)>te)&&(M.push(E),F=E),H=i,X=s}let P=e[0].point.slice(0,2),k=e.length>1?e[e.length-1].point.slice(0,2):l(e[0].point,[1,1]),Q=[],N=[];if(e.length===1){if(!(g||T)||D){let r=ee(P,G(R(a(P,k))),-(U||m)),i=[];for(let o=1/13,s=o;s<=1;s+=o)i.push(L(r,P,V*2*s));return i}}else{if(!(g||T&&e.length===1))if(S)for(let i=1/13,o=i;o<=1;o+=i){let s=L(M[0],P,V*o);Q.push(s)}else{let i=a(_[0],M[0]),o=b(i,.5),s=b(i,.51);Q.push(a(P,o),a(P,s),l(P,s),l(P,o))}let r=R(se(e[e.length-1].vector));if(T||g&&e.length===1)N.push(k);else if(q){let i=ee(k,r,m);for(let o=1/29,s=o;s<1;s+=o)N.push(L(i,k,V*3*s))}else N.push(l(k,b(r,m)),l(k,b(r,m*.99)),a(k,b(r,m*.99)),a(k,b(r,m)))}return _.concat(N,M.reverse(),Q)}function me(e,t={}){var q;let{streamline:u=.5,size:x=16,last:h=!1}=t;if(e.length===0)return[];let y=.15+(1-u)*.85,n=Array.isArray(e[0])?e:e.map(({x:c,y:p,pressure:g=.5})=>[c,p,g]);if(n.length===2){let c=n[1];n=n.slice(0,-1);for(let p=1;p<5;p++)n.push(K(n[0],c,p/4))}n.length===1&&(n=[...n,[...l(n[0],[1,1]),...n[0].slice(2)]]);let f=[{point:[n[0][0],n[0][1]],pressure:n[0][2]>=0?n[0][2]:.25,vector:[1,1],distance:0,runningLength:0}],d=!1,D=0,S=f[0],j=n.length-1;for(let c=1;c<n.length;c++){let p=h&&c===j?n[c].slice(0,2):K(S.point,n[c],y);if(ue(S.point,p))continue;let g=ie(p,S.point);if(D+=g,c<j&&!d){if(D<x)continue;d=!0}S={point:p,pressure:n[c][2]>=0?n[c][2]:.5,vector:G(a(S.point,p)),distance:g,runningLength:D},f.push(S)}return f[0].vector=((q=f[1])==null?void 0:q.vector)||[0,0],f}function ae(e,t={}){return ce(me(e,t),t)}var _e=ae;export{_e as default,ae as getStroke,ce as getStrokeOutlinePoints,me as getStrokePoints};\n","import { getSvgPathFromStroke } from \"../utils\";\nimport getStroke from \"perfect-freehand\";\n\ntype Props = {\n  x: number;\n  y: number;\n  points: number[][];\n  fill: string;\n  onPointerDown?: (e: React.PointerEvent) => void;\n  stroke?: string;\n  size?: number;\n};\n\nexport default function Path({\n  x,\n  y,\n  onPointerDown,\n  stroke,\n  fill,\n  points,\n  size\n}: Props) {\n  return (\n    <path\n      onPointerDown={onPointerDown}\n      d={getSvgPathFromStroke(\n        getStroke(points, {\n          size: size ?? 10,\n          thinning: 0.5,\n          smoothing: 0.5,\n          streamline: 0.5,\n        })\n      )}\n      style={{\n        transform: `translate(${x}px, ${y}px)`,\n      }}\n      x={0}\n      y={0}\n      fill={fill}\n      stroke={stroke}\n      strokeWidth={1}\n    />\n  );\n}\n","import type { RectangleLayer } from \"../types\";\nimport { colorToCss } from \"../utils\";\n\ntype Props = {\n  id: string;\n  layer: RectangleLayer;\n  onPointerDown: (e: React.PointerEvent, id: string) => void;\n  selectionColor?: string;\n};\n\nexport default function Rectangle({\n  layer,\n  onPointerDown,\n  id,\n  selectionColor,\n}: Props) {\n  const { x, y, width, height, fill } = layer;\n\n  return (\n    <rect\n      onPointerDown={(e) => onPointerDown(e, id)}\n      style={{\n        transform: `translate(${x}px, ${y}px)`,\n      }}\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      fill={fill ? colorToCss(fill) : \"#CCC\"}\n      strokeWidth={1}\n      stroke={selectionColor || \"transparent\"}\n    />\n  );\n}\n","import { useStorage } from \"@liveblocks/react/suspense\";\nimport React, { memo } from \"react\";\nimport Ellipse from \"./Ellipse\";\nimport Path from \"./Path\";\nimport Rectangle from \"./Rectangle\";\nimport { CanvasMode, LayerType } from \"../types\";\nimport { colorToCss } from \"../utils\";\n\ntype Props = {\n  id: string;\n  mode: CanvasMode;\n  onLayerPointerDown: (e: React.PointerEvent, layerId: string) => void;\n  selectionColor?: string;\n};\n\nconst LayerComponent = memo(\n  ({ mode, onLayerPointerDown, id, selectionColor }: Props) => {\n    const layer = useStorage((root: any) => root.layers.get(id));\n    if (!layer) {\n      return null;\n    }\n\n    const isAnimated =\n      mode !== CanvasMode.Translating && mode !== CanvasMode.Resizing;\n\n    switch (layer.type) {\n      case LayerType.Ellipse:\n        return (\n          <Ellipse\n            id={id}\n            layer={layer}\n            onPointerDown={onLayerPointerDown}\n            selectionColor={selectionColor}\n          />\n        );\n      case LayerType.Path:\n        return (\n          <Path\n            key={id}\n            points={layer.points}\n            onPointerDown={(e) => onLayerPointerDown(e, id)}\n            x={layer.x}\n            y={layer.y}\n            fill={layer.fill ? colorToCss(layer.fill) : \"#CCC\"}\n            stroke={selectionColor}\n          />\n        );\n      case LayerType.Rectangle:\n        return (\n          <Rectangle\n            id={id}\n            layer={layer}\n            onPointerDown={onLayerPointerDown}\n            selectionColor={selectionColor}\n          />\n        );\n      default:\n        console.warn(\"Unknown layer type\");\n        return null;\n    }\n  }\n);\n\nexport default LayerComponent;\n","import type { Color } from \"../types\";\nimport { colorToCss } from \"../utils\";\nimport styles from \"./ColorPicker.module.css\";\n\ntype Props = {\n  onChange: (color: Color) => void;\n};\n\nexport default function ColorPicker({ onChange }: Props) {\n  return (\n    <div className={styles.container}>\n      <ColorButton color={{ r: 243, g: 82, b: 35 }} onClick={onChange} />\n      <ColorButton color={{ r: 255, g: 198, b: 38 }} onClick={onChange} />\n      <ColorButton color={{ r: 68, g: 202, b: 99 }} onClick={onChange} />\n      <ColorButton color={{ r: 39, g: 142, b: 237 }} onClick={onChange} />\n      <ColorButton color={{ r: 155, g: 105, b: 245 }} onClick={onChange} />\n      <ColorButton color={{ r: 252, g: 142, b: 42 }} onClick={onChange} />\n      <ColorButton color={{ r: 82, g: 82, b: 82 }} onClick={onChange} />\n      <ColorButton color={{ r: 255, g: 255, b: 255 }} onClick={onChange} />\n    </div>\n  );\n}\n\nfunction ColorButton({\n  onClick,\n  color,\n}: {\n  onClick: (color: Color) => void;\n  color: Color;\n}) {\n  return (\n    <button\n      className={styles.color_swatch_button}\n      onClick={() => onClick(color)}\n    >\n      <div\n        className={styles.color_swatch}\n        style={{ background: colorToCss(color) }}\n      />\n    </button>\n  );\n}\n","import styles from \"./IconButton.module.css\";\n\ntype Props = {\n  onClick: () => void;\n  children: React.ReactNode;\n  isActive?: boolean;\n  disabled?: boolean;\n};\n\nexport default function IconButton({\n  onClick,\n  children,\n  isActive,\n  disabled,\n}: Props) {\n  return (\n    <button\n      className={`${styles.button} ${isActive ? styles.button_active : \"\"}`}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n}\n","// @ts-nocheck\nimport { useSelf, useMutation } from \"@liveblocks/react/suspense\";\n\n/**\n * Delete all the selected layers.\n */\nexport default function useDeleteLayers() {\n  const selection = useSelf((me) => me.presence.selection);\n  return useMutation(\n    ({ storage, setMyPresence }) => {\n      const liveLayers = storage.get(\"layers\");\n      const liveLayerIds = storage.get(\"layerIds\");\n      for (const id of selection) {\n        // Delete the layer from the layers LiveMap\n        liveLayers.delete(id);\n        // Find the layer index in the z-index list and remove it\n        const index = liveLayerIds.indexOf(id);\n        if (index !== -1) {\n          liveLayerIds.delete(index);\n        }\n      }\n      setMyPresence({ selection: [] }, { addToHistory: true });\n    },\n    [selection]\n  );\n}\n","// @ts-nocheck\n\nimport { memo } from \"react\";\nimport ColorPicker from \"./ColorPicker\";\nimport IconButton from \"./IconButton\";\nimport type { Camera, Color } from \"../types\";\nimport styles from \"./SelectionTools.module.css\";\nimport useDeleteLayers from \"../hooks/useDeleteLayers\";\nimport useSelectionBounds from \"../hooks/useSelectionBounds\";\nimport { useSelf, useMutation } from \"@liveblocks/react/suspense\";\n\ntype SelectionToolsProps = {\n  isAnimated: boolean;\n  camera: Camera;\n  setLastUsedColor: (color: Color) => void;\n};\n\nfunction SelectionTools({\n  isAnimated,\n  camera,\n  setLastUsedColor,\n}: SelectionToolsProps) {\n  const selection = useSelf((me) => me.presence.selection);\n\n  /**\n   * Move all the selected layers to the front\n   */\n  const moveToFront = useMutation(\n    ({ storage }) => {\n      const liveLayerIds = storage.get(\"layerIds\");\n      const indices: number[] = [];\n\n      const arr = liveLayerIds.toArray();\n\n      for (let i = 0; i < arr.length; i++) {\n        if (selection.includes(arr[i])) {\n          indices.push(i);\n        }\n      }\n\n      for (let i = indices.length - 1; i >= 0; i--) {\n        liveLayerIds.move(\n          indices[i],\n          arr.length - 1 - (indices.length - 1 - i)\n        );\n      }\n    },\n    [selection]\n  );\n\n  /**\n   * Move all the selected layers to the back\n   */\n  const moveToBack = useMutation(\n    ({ storage }) => {\n      const liveLayerIds = storage.get(\"layerIds\");\n      const indices: number[] = [];\n\n      const arr = liveLayerIds.toArray();\n\n      for (let i = 0; i < arr.length; i++) {\n        if (selection.includes(arr[i])) {\n          indices.push(i);\n        }\n      }\n\n      for (let i = 0; i < indices.length; i++) {\n        liveLayerIds.move(indices[i], i);\n      }\n    },\n    [selection]\n  );\n\n  /**\n   * Change the color of all the selected layers\n   */\n  const setFill = useMutation(\n    ({ storage }, fill: Color) => {\n      const liveLayers = storage.get(\"layers\");\n      setLastUsedColor(fill);\n      selection.forEach((id) => {\n        liveLayers.get(id)?.set(\"fill\", fill);\n      });\n    },\n    [selection, setLastUsedColor]\n  );\n\n  const deleteLayers = useDeleteLayers();\n\n  const selectionBounds = useSelectionBounds();\n  if (!selectionBounds) {\n    return null;\n  }\n\n  const x = selectionBounds.width / 2 + selectionBounds.x + camera.x;\n  const y = selectionBounds.y + camera.y;\n  return (\n    <div\n      className={styles.selection_inspector}\n      style={{\n        transform: `translate(calc(${x}px - 50%), calc(${y - 16}px - 100%))`,\n      }}\n    >\n      <ColorPicker onChange={setFill} />\n\n      <div>\n        <IconButton onClick={moveToFront}>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M9 6.5L12 2L15 6.5H12.75V9.71429L19.976 11.7789C20.7013 11.9861 20.7013 13.0139 19.976 13.2211L12.8242 15.2645C12.2855 15.4184 11.7145 15.4184 11.1758 15.2645L4.024 13.2211C3.29872 13.0139 3.29872 11.9861 4.024 11.7789L11.25 9.71429V6.5H9ZM6.7493 15.5L4.02345 16.2788C3.29817 16.486 3.29817 17.5139 4.02345 17.7211L11.1753 19.7645C11.714 19.9184 12.285 19.9184 12.8236 19.7645L19.9755 17.7211C20.7007 17.5139 20.7007 16.486 19.9755 16.2788L17.2493 15.4999L12.8233 16.7645C12.2847 16.9184 11.7137 16.9184 11.175 16.7645L6.7493 15.5Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </IconButton>\n        <IconButton onClick={moveToBack}>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M11.1758 4.23547L4.024 6.27885C3.29872 6.48607 3.29872 7.51391 4.024 7.72114L11.1758 9.76452C11.7145 9.91842 12.2855 9.91842 12.8242 9.76452L19.976 7.72114C20.7013 7.51391 20.7013 6.48607 19.976 6.27885L12.8242 4.23547C12.2855 4.08156 11.7145 4.08156 11.1758 4.23547ZM4.02345 10.7788L6.7493 10L11.9992 11.5L17.2493 9.99992L19.9755 10.7788C20.7007 10.986 20.7007 12.0139 19.9755 12.2211L12.8236 14.2645C12.7991 14.2715 12.7746 14.2782 12.75 14.2845V17.5H15L12 22L9 17.5H11.25V14.2848C11.225 14.2783 11.2001 14.2716 11.1753 14.2645L4.02345 12.2211C3.29817 12.0139 3.29817 10.986 4.02345 10.7788Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </IconButton>\n      </div>\n      <div className={styles.selection_inspector_delete}>\n        <IconButton onClick={deleteLayers}>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n            <path\n              d=\"M7.5 9H16.5V18C16.5 18.8284 15.8284 19.5 15 19.5H9C8.17157 19.5 7.5 18.8284 7.5 18V9Z\"\n              fill=\"currentColor\"\n            />\n            <path\n              d=\"M6 6.75C6 6.33579 6.33579 6 6.75 6H8.37868C8.7765 6 9.15804 5.84196 9.43934 5.56066L10.0607 4.93934C10.342 4.65804 10.7235 4.5 11.1213 4.5H12.8787C13.2765 4.5 13.658 4.65804 13.9393 4.93934L14.5607 5.56066C14.842 5.84196 15.2235 6 15.6213 6H17.25C17.6642 6 18 6.33579 18 6.75V7.5H6V6.75Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(SelectionTools);\n","import { memo } from \"react\";\nimport { useOther } from \"@liveblocks/react/suspense\";\nimport { connectionIdToColor } from \"../utils\";\n\ntype Props = {\n  connectionId: number;\n};\n\nfunction Cursor({ connectionId }: Props) {\n  //\n  // RATIONALE:\n  // Each cursor itself subscribes to _just_ the change for the user. This\n  // means that if only one user's cursor is moving, only one <Cursor />\n  // component has to re-render. All the others can remain idle.\n\n  // @ts-ignore\n  const cursor = useOther(connectionId, (user) => user.presence.cursor);\n  if (!cursor) {\n    return null;\n  }\n\n  const { x, y } = cursor as { x: number; y: number };\n  return (\n    <path\n      style={{\n        transform: `translateX(${x}px) translateY(${y}px)`,\n      }}\n      d=\"M5.65376 12.3673H5.46026L5.31717 12.4976L0.500002 16.8829L0.500002 1.19841L11.7841 12.3673H5.65376Z\"\n      fill={connectionIdToColor(connectionId)}\n    />\n  );\n}\n\nexport default memo(Cursor);\n","import {\n  useOthersMapped,\n  useOthersConnectionIds,\n} from \"@liveblocks/react/suspense\";\nimport { shallow } from \"@liveblocks/client\";\nimport React from \"react\";\nimport { colorToCss } from \"../utils\";\nimport Cursor from \"./Cursor\";\nimport Path from \"./Path\";\n\nfunction Cursors() {\n  //\n  // RATIONALE:\n  // We're using useConnectionIds() here instead of useOthers(), because this\n  // will only re-render this component if users enter or leave.\n  //\n  // Each <Cursor /> component we loop over here will subscribe to necessary\n  // changes happening for _that_ user alone, which is most rendering\n  // efficient.\n  //\n  const ids = useOthersConnectionIds();\n  return (\n    <>\n      {ids.map((connectionId) => (\n        <Cursor key={connectionId} connectionId={connectionId} />\n      ))}\n    </>\n  );\n}\n\nfunction Drafts() {\n  const others = useOthersMapped(\n    (other: any) => ({\n      pencilDraft: other.presence.pencilDraft,\n      penColor: other.presence.penColor,\n    }),\n    shallow\n  );\n  return (\n    <>\n      {/* All the drawing of other users in the room that are currently in progress */}\n      {others.map(([key, other]: any) => {\n        if (other.pencilDraft) {\n          return (\n            <Path\n              key={key}\n              x={0}\n              y={0}\n              points={other.pencilDraft}\n              fill={other.penColor ? colorToCss(other.penColor) : \"#CCC\"}\n            />\n          );\n        }\n        return null;\n      })}\n    </>\n  );\n}\n\nexport default React.memo(function MultiplayerGuides() {\n  return (\n    <>\n      <Cursors />\n      <Drafts />\n    </>\n  );\n});\n","import React from \"react\";\nimport IconButton from \"../IconButton\";\n\ntype Props = {\n  isActive: boolean;\n  onClick: () => void;\n};\n\nexport default function PencilButton({ isActive, onClick }: Props) {\n  return (\n    <IconButton isActive={isActive} onClick={onClick}>\n      <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\">\n        <path\n          d=\"M22.8538 10.1464C22.76 10.0527 22.6329 10 22.5003 10C22.3677 10 22.2406 10.0527 22.1468 10.1464L20.4998 11.7934L24.2068 15.5004L25.8538 13.8544C25.9004 13.8079 25.9373 13.7528 25.9625 13.692C25.9877 13.6313 26.0007 13.5662 26.0007 13.5004C26.0007 13.4346 25.9877 13.3695 25.9625 13.3088C25.9373 13.248 25.9004 13.1928 25.8538 13.1464L22.8538 10.1464ZM23.4998 16.2074L19.7928 12.5004L13.2928 19.0004H13.4998C13.6324 19.0004 13.7596 19.0531 13.8534 19.1468C13.9471 19.2406 13.9998 19.3678 13.9998 19.5004V20.0004H14.4998C14.6324 20.0004 14.7596 20.0531 14.8534 20.1468C14.9471 20.2406 14.9998 20.3678 14.9998 20.5004V21.0004H15.4998C15.6324 21.0004 15.7596 21.0531 15.8534 21.1468C15.9471 21.2406 15.9998 21.3678 15.9998 21.5004V22.0004H16.4998C16.6324 22.0004 16.7596 22.0531 16.8534 22.1468C16.9471 22.2406 16.9998 22.3678 16.9998 22.5004V22.7074L23.4998 16.2074ZM16.0318 23.6754C16.0108 23.6194 15.9999 23.5602 15.9998 23.5004V23.0004H15.4998C15.3672 23.0004 15.24 22.9477 15.1463 22.8539C15.0525 22.7602 14.9998 22.633 14.9998 22.5004V22.0004H14.4998C14.3672 22.0004 14.24 21.9477 14.1463 21.8539C14.0525 21.7602 13.9998 21.633 13.9998 21.5004V21.0004H13.4998C13.3672 21.0004 13.24 20.9477 13.1463 20.8539C13.0525 20.7602 12.9998 20.633 12.9998 20.5004V20.0004H12.4998C12.44 20.0003 12.3808 19.9895 12.3248 19.9684L12.1458 20.1464C12.0982 20.1944 12.0607 20.2515 12.0358 20.3144L10.0358 25.3144C9.99944 25.4053 9.99053 25.5048 10.0102 25.6007C10.0299 25.6966 10.0772 25.7845 10.1464 25.8538C10.2157 25.923 10.3036 25.9703 10.3995 25.99C10.4954 26.0097 10.5949 26.0008 10.6858 25.9644L15.6858 23.9644C15.7487 23.9395 15.8058 23.902 15.8538 23.8544L16.0318 23.6764V23.6754Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </IconButton>\n  );\n}\n","import React from \"react\";\nimport IconButton from \"../IconButton\";\n\ntype Props = {\n  isActive: boolean;\n  onClick: () => void;\n};\n\nexport default function RectangleButton({ isActive, onClick }: Props) {\n  return (\n    <IconButton isActive={isActive} onClick={onClick}>\n      <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24 12H12V24H24V12ZM10 10V26H26V10H10Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </IconButton>\n  );\n}\n","import React from \"react\";\nimport IconButton from \"../IconButton\";\n\ntype Props = {\n  isActive: boolean;\n  onClick: () => void;\n};\n\nexport default function EllipseButton({ isActive, onClick }: Props) {\n  return (\n    <IconButton isActive={isActive} onClick={onClick}>\n      <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M11 18C11 21.866 14.134 25 18 25C21.866 25 25 21.866 25 18C25 14.134 21.866 11 18 11C14.134 11 11 14.134 11 18ZM18 9C13.0294 9 9 13.0294 9 18C9 22.9706 13.0294 27 18 27C22.9706 27 27 22.9706 27 18C27 13.0294 22.9706 9 18 9Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </IconButton>\n  );\n}\n","import React from \"react\";\nimport IconButton from \"../IconButton\";\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nexport default function UndoButton({ onClick, disabled }: Props) {\n  return (\n    <IconButton onClick={onClick} disabled={disabled}>\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 36 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M15 16H21C22.654 16 24 17.346 24 19C24 20.654 22.654 22 21 22H18V24H21C23.757 24 26 21.757 26 19C26 16.243 23.757 14 21 14H15V11L10 15L15 19V16Z\"\n          fill=\"#888888\"\n        />\n      </svg>\n    </IconButton>\n  );\n}\n","import React from \"react\";\nimport IconButton from \"../IconButton\";\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nexport default function DownloadButton({ onClick }: Props) {\n  return (\n    <IconButton onClick={onClick}>\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M17 17H17.01M17.4 14H18C18.9319 14 19.3978 14 19.7654 14.1522C20.2554 14.3552 20.6448 14.7446 20.8478 15.2346C21 15.6022 21 16.0681 21 17C21 17.9319 21 18.3978 20.8478 18.7654C20.6448 19.2554 20.2554 19.6448 19.7654 19.8478C19.3978 20 18.9319 20 18 20H6C5.06812 20 4.60218 20 4.23463 19.8478C3.74458 19.6448 3.35523 19.2554 3.15224 18.7654C3 18.3978 3 17.9319 3 17C3 16.0681 3 15.6022 3.15224 15.2346C3.35523 14.7446 3.74458 14.3552 4.23463 14.1522C4.60218 14 5.06812 14 6 14H6.6M12 15V4M12 15L9 12M12 15L15 12\"\n          stroke=\"#000000\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n      </svg>\n    </IconButton>\n  );\n}\n","import React from \"react\";\nimport IconButton from \"../IconButton\";\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nexport default function RedoButton({ onClick, disabled }: Props) {\n  return (\n    <IconButton onClick={onClick} disabled={disabled}>\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 36 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g clipPath=\"url(#clip0_18:85)\">\n          <path\n            d=\"M15 24H18V22H15C13.346 22 12 20.654 12 19C12 17.346 13.346 16 15 16H21V19L26 15L21 11V14H15C12.243 14 10 16.243 10 19C10 21.757 12.243 24 15 24Z\"\n            fill=\"#888888\"\n          />\n        </g>\n        <defs>\n          <clipPath id=\"clip0_18:85\">\n            <rect width=\"36\" height=\"36\" fill=\"white\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </IconButton>\n  );\n}\n","import React from \"react\";\nimport IconButton from \"../IconButton\";\n\ntype Props = {\n  isActive: boolean;\n  onClick: () => void;\n};\n\nexport default function SelectionButton({ isActive, onClick }: Props) {\n  return (\n    <IconButton isActive={isActive} onClick={onClick}>\n      <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\">\n        <path d=\"M13 26V9L25 21.1428H18.2189L13 26Z\" fill=\"currentColor\" />\n      </svg>\n    </IconButton>\n  );\n}\n","import React from \"react\";\nimport PencilButton from \"./PencilButton\";\nimport RectangleButton from \"./RectangleButton\";\nimport EllipseButton from \"./EllipseButton\";\nimport UndoButton from \"./UndoButton\";\nimport DownloadButton from \"./DownloadButton\";\nimport RedoButton from \"./RedoButton\";\nimport SelectionButton from \"./SelectionButton\";\nimport { CanvasMode, LayerType, type CanvasState } from \"../../types\";\nimport styles from \"./index.module.css\";\n\ntype Props = {\n  canvasState: CanvasState;\n  setCanvasState: (newState: CanvasState) => void;\n  undo: () => void;\n  redo: () => void;\n  download: () => void;\n  canUndo: boolean;\n  canRedo: boolean;\n};\n\nexport default function ToolsBar({\n  canvasState,\n  setCanvasState,\n  undo,\n  redo,\n  canUndo,\n  canRedo,\n  download,\n}: Props) {\n  return (\n    <div className={styles.tools_panel_container}>\n      <div className={styles.tools_panel}>\n        <div className={styles.tools_panel_section}>\n          <SelectionButton\n            isActive={\n              canvasState.mode === CanvasMode.None ||\n              canvasState.mode === CanvasMode.Translating ||\n              canvasState.mode === CanvasMode.SelectionNet ||\n              canvasState.mode === CanvasMode.Pressing ||\n              canvasState.mode === CanvasMode.Resizing\n            }\n            onClick={() => setCanvasState({ mode: CanvasMode.None })}\n          />\n          <PencilButton\n            isActive={canvasState.mode === CanvasMode.Pencil}\n            onClick={() => setCanvasState({ mode: CanvasMode.Pencil })}\n          />\n          <RectangleButton\n            isActive={\n              canvasState.mode === CanvasMode.Inserting &&\n              canvasState.layerType === LayerType.Rectangle\n            }\n            onClick={() =>\n              setCanvasState({\n                mode: CanvasMode.Inserting,\n                layerType: LayerType.Rectangle,\n              })\n            }\n          />\n          <EllipseButton\n            isActive={\n              canvasState.mode === CanvasMode.Inserting &&\n              canvasState.layerType === LayerType.Ellipse\n            }\n            onClick={() =>\n              setCanvasState({\n                mode: CanvasMode.Inserting,\n                layerType: LayerType.Ellipse,\n              })\n            }\n          />\n        </div>\n        <div className={styles.seperator}></div>\n        <div className={styles.tools_panel_section}>\n          <UndoButton onClick={undo} disabled={!canUndo} />\n          <RedoButton onClick={redo} disabled={!canRedo} />\n        </div>\n        <div className={styles.seperator}></div>\n        <div className={styles.tools_panel_section}>\n          <DownloadButton onClick={download} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport styles from \"./useDisableScrollBounce.module.css\";\n\nexport default function useDisableScrollBounce() {\n  useEffect(() => {\n    // Disable scroll bounce on window to make the panning work properly\n    document.body.classList.add(styles.no_scroll);\n    return () => {\n      document.body.classList.remove(styles.no_scroll);\n    };\n  }, []);\n}\n","/// <reference path=\"../../../liveblocks.config.ts\" />\nimport React, {\n    useCallback,\n    useEffect,\n    useMemo,\n    useState,\n    useRef,\n} from \"react\";\nimport {\n    useMutation,\n    RoomProvider,\n    useHistory,\n    useStorage,\n    useSelf,\n    useOthersMapped,\n    useCanUndo,\n    useCanRedo,\n} from \"@liveblocks/react/suspense\";\nimport { ClientSideSuspense } from \"@liveblocks/react\";\nimport { LiveList, LiveMap, LiveObject } from \"@liveblocks/client\";\nimport {\n    type Color,\n    type Layer,\n    LayerType,\n    type CanvasState,\n    CanvasMode,\n    type Camera,\n    Side,\n    type XYWH,\n    type Point,\n} from \"./types\";\nimport styles from \"./Whiteboard.module.css\";\nimport {\n    colorToCss,\n    connectionIdToColor,\n    findIntersectingLayersWithRectangle,\n    penPointsToPathLayer,\n    pointerEventToCanvasPoint,\n    resizeBounds,\n} from \"./utils\";\nimport SelectionBox from \"./components/SelectionBox\";\nimport { nanoid } from \"nanoid\";\nimport LayerComponent from \"./components/LayerComponent\";\nimport SelectionTools from \"./components/SelectionTools\";\nimport useDeleteLayers from \"./hooks/useDeleteLayers\";\nimport MultiplayerGuides from \"./components/MultiplayerGuides\";\nimport Path from \"./components/Path\";\nimport ToolsBar from \"./components/ToolsBar\";\nimport useDisableScrollBounce from \"./hooks/useDisableScrollBounce\";\nimport Room from \"../../shared/Room\";\n\nconst MAX_LAYERS = 100;\n\nexport default (props: { roomID: string }) => (\n    <Room {...props} >\n        <div className={styles.container}>\n            <Canvas />\n        </div>\n    </Room>\n);\n\nexport function Canvas() {\n    const layerIds = useStorage((root) => root.layerIds);\n    const pencilDraft = useSelf((me) => me.presence.pencilDraft);\n    const [canvasState, setState] = useState<CanvasState>({\n        mode: CanvasMode.None,\n    });\n    const [camera, setCamera] = useState<Camera>({ x: 0, y: 0 });\n    const [lastUsedColor, setLastUsedColor] = useState<Color>({\n        r: 252,\n        g: 142,\n        b: 42,\n    });\n    const history = useHistory();\n    const canUndo = useCanUndo();\n    const canRedo = useCanRedo();\n    const canvasRef = useRef<SVGSVGElement>(null);\n\n    useDisableScrollBounce(); // NTOE: this disables the scroll of the whole page\n    const deleteLayers = useDeleteLayers();\n\n    useEffect(() => {\n        function onKeyDown(e: KeyboardEvent) {\n            // TODO: check for focus\n            switch (e.key) {\n                case \"Backspace\": {\n                    deleteLayers();\n                    break;\n                }\n                case \"z\": {\n                    if (e.ctrlKey || e.metaKey) {\n                        if (e.shiftKey) {\n                            history.redo();\n                        } else {\n                            history.undo();\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        document.addEventListener(\"keydown\", onKeyDown);\n        return () => {\n            document.removeEventListener(\"keydown\", onKeyDown);\n        };\n    }, [deleteLayers, history]);\n\n    const onLayerPointerDown = useMutation(\n        ({ self, setMyPresence }, e: React.PointerEvent, layerId: string) => {\n            if (\n                canvasState.mode === CanvasMode.Pencil ||\n                canvasState.mode === CanvasMode.Inserting\n            ) {\n                return;\n            }\n\n            history.pause();\n            e.stopPropagation();\n            const point = pointerEventToCanvasPoint(e, camera, canvasRef.current!);\n            if (!self.presence.selection.includes(layerId)) {\n                setMyPresence({ selection: [layerId] }, { addToHistory: true });\n            }\n            setState({ mode: CanvasMode.Translating, current: point });\n        },\n        [setState, camera, history, canvasState.mode]\n    );\n\n    const onResizeHandlePointerDown = useCallback(\n        (corner: Side, initialBounds: XYWH) => {\n            history.pause();\n            setState({ mode: CanvasMode.Resizing, initialBounds, corner });\n        },\n        [history]\n    );\n\n    const insertLayer = useMutation(\n        (\n            { storage, setMyPresence },\n            layerType: LayerType.Ellipse | LayerType.Rectangle,\n            position: Point\n        ) => {\n            const liveLayers = storage.get(\"layers\");\n            if (liveLayers.size >= MAX_LAYERS) {\n                return;\n            }\n\n            const liveLayerIds = storage.get(\"layerIds\");\n            const layerId = nanoid();\n            const layer = new LiveObject({\n                type: layerType,\n                x: position.x,\n                y: position.y,\n                height: 100,\n                width: 100,\n                fill: lastUsedColor,\n            });\n            liveLayerIds.push(layerId);\n            liveLayers.set(layerId, layer);\n\n            setMyPresence({ selection: [layerId] }, { addToHistory: true });\n            setState({ mode: CanvasMode.None });\n        },\n        [lastUsedColor]\n    );\n\n    const insertPath = useMutation(\n        ({ storage, self, setMyPresence }) => {\n            const liveLayers = storage.get(\"layers\");\n            const { pencilDraft } = self.presence;\n            if (\n                pencilDraft == null ||\n                pencilDraft.length < 2 ||\n                liveLayers.size >= MAX_LAYERS\n            ) {\n                setMyPresence({ pencilDraft: null });\n                return;\n            }\n\n            const id = nanoid();\n            liveLayers.set(\n                id,\n                new LiveObject(penPointsToPathLayer(pencilDraft, lastUsedColor))\n            );\n\n            const liveLayerIds = storage.get(\"layerIds\");\n            liveLayerIds.push(id);\n            setMyPresence({ pencilDraft: null });\n            setState({ mode: CanvasMode.Pencil });\n        },\n        [lastUsedColor]\n    );\n\n    const translateSelectedLayers = useMutation(\n        ({ storage, self }, point: Point) => {\n            if (canvasState.mode !== CanvasMode.Translating) {\n                return;\n            }\n\n            const offset = {\n                x: point.x - canvasState.current.x,\n                y: point.y - canvasState.current.y,\n            };\n\n            const liveLayers = storage.get(\"layers\");\n            for (const id of self.presence.selection) {\n                const layer = liveLayers.get(id);\n                if (layer) {\n                    layer.update({\n                        x: layer.get(\"x\") + offset.x,\n                        y: layer.get(\"y\") + offset.y,\n                    });\n                }\n            }\n\n            setState({ mode: CanvasMode.Translating, current: point });\n        },\n        [canvasState]\n    );\n\n    const resizeSelectedLayer = useMutation(\n        ({ storage, self }, point: Point) => {\n            if (canvasState.mode !== CanvasMode.Resizing) {\n                return;\n            }\n\n            const bounds = resizeBounds(\n                canvasState.initialBounds,\n                canvasState.corner,\n                point\n            );\n\n            const liveLayers = storage.get(\"layers\");\n            const layer = liveLayers.get(self.presence.selection[0]);\n            if (layer) {\n                layer.update(bounds);\n            }\n        },\n        [canvasState]\n    );\n\n    const unselectLayers = useMutation(({ self, setMyPresence }) => {\n        if (self.presence.selection.length > 0) {\n            setMyPresence({ selection: [] }, { addToHistory: true });\n        }\n    }, []);\n\n    const startDrawing = useMutation(\n        ({ setMyPresence }, point: Point, pressure: number) => {\n            setMyPresence({\n                pencilDraft: [[point.x, point.y, pressure]],\n                penColor: lastUsedColor,\n            });\n        },\n        [lastUsedColor]\n    );\n\n    const continueDrawing = useMutation(\n        ({ self, setMyPresence }, point: Point, e: React.PointerEvent) => {\n            const { pencilDraft } = self.presence;\n            if (\n                canvasState.mode !== CanvasMode.Pencil ||\n                e.buttons !== 1 ||\n                pencilDraft == null\n            ) {\n                return;\n            }\n\n            setMyPresence({\n                cursor: point,\n                pencilDraft:\n                    pencilDraft.length === 1 &&\n                        pencilDraft[0][0] === point.x &&\n                        pencilDraft[0][1] === point.y\n                        ? pencilDraft\n                        : [...pencilDraft, [point.x, point.y, e.pressure]],\n            });\n        },\n        [canvasState.mode]\n    );\n\n    const startMultiSelection = useCallback((current: Point, origin: Point) => {\n        if (Math.abs(current.x - origin.x) + Math.abs(current.y - origin.y) > 5) {\n            setState({ mode: CanvasMode.SelectionNet, origin, current });\n        }\n    }, []);\n\n    const updateSelectionNet = useMutation(\n        ({ storage, setMyPresence }, current: Point, origin: Point) => {\n            const layers = storage.get(\"layers\").toImmutable();\n            setState({ mode: CanvasMode.SelectionNet, origin, current });\n            const ids = findIntersectingLayersWithRectangle(\n                layerIds,\n                layers,\n                origin,\n                current\n            );\n            setMyPresence({ selection: ids });\n        },\n        [layerIds]\n    );\n\n    const selections = useOthersMapped((other) => other.presence.selection);\n\n    const layerIdsToColorSelection = useMemo(() => {\n        const layerIdsToColorSelection: Record<string, string> = {};\n        for (const user of selections) {\n            const [connectionId, selection] = user;\n            for (const layerId of selection) {\n                layerIdsToColorSelection[layerId] = connectionIdToColor(connectionId);\n            }\n        }\n        return layerIdsToColorSelection;\n    }, [selections]);\n\n    // NOTE: this enables the scroll within the canvas\n    const onWheel = useCallback((e: React.WheelEvent) => {\n        setCamera((camera) => ({ x: camera.x - e.deltaX, y: camera.y - e.deltaY }));\n    }, []);\n\n    const onPointerDown = React.useCallback(\n        (e: React.PointerEvent) => {\n            const point = pointerEventToCanvasPoint(e, camera, canvasRef.current!);\n            if (canvasState.mode === CanvasMode.Inserting) {\n                return;\n            }\n            if (canvasState.mode === CanvasMode.Pencil) {\n                startDrawing(point, e.pressure);\n                return;\n            }\n            setState({ origin: point, mode: CanvasMode.Pressing });\n        },\n        [camera, canvasState.mode, setState, startDrawing]\n    );\n\n    const onPointerMove = useMutation(\n        ({ setMyPresence }, e: React.PointerEvent) => {\n            e.preventDefault();\n            const current = pointerEventToCanvasPoint(e, camera, canvasRef.current!);\n            if (canvasState.mode === CanvasMode.Pressing) {\n                startMultiSelection(current, canvasState.origin);\n            } else if (canvasState.mode === CanvasMode.SelectionNet) {\n                updateSelectionNet(current, canvasState.origin);\n            } else if (canvasState.mode === CanvasMode.Translating) {\n                translateSelectedLayers(current);\n            } else if (canvasState.mode === CanvasMode.Resizing) {\n                resizeSelectedLayer(current);\n            } else if (canvasState.mode === CanvasMode.Pencil) {\n                continueDrawing(current, e);\n            }\n            setMyPresence({ cursor: current });\n        },\n        [\n            camera,\n            canvasState,\n            continueDrawing,\n            resizeSelectedLayer,\n            startMultiSelection,\n            translateSelectedLayers,\n            updateSelectionNet,\n        ]\n    );\n\n    const onPointerLeave = useMutation(\n        ({ setMyPresence }) => setMyPresence({ cursor: null }),\n        []\n    );\n\n    const onPointerUp = useMutation(\n        ({ }, e) => {\n            const point = pointerEventToCanvasPoint(e, camera, canvasRef.current!);\n            if (\n                canvasState.mode === CanvasMode.None ||\n                canvasState.mode === CanvasMode.Pressing\n            ) {\n                unselectLayers();\n                setState({ mode: CanvasMode.None });\n            } else if (canvasState.mode === CanvasMode.Pencil) {\n                insertPath();\n            } else if (canvasState.mode === CanvasMode.Inserting) {\n                insertLayer(canvasState.layerType, point);\n            } else {\n                setState({ mode: CanvasMode.None });\n            }\n            history.resume();\n        },\n        [\n            camera,\n            canvasState,\n            history,\n            insertLayer,\n            insertPath,\n            setState,\n            unselectLayers,\n        ]\n    );\n\n    const downloadSvgAsPng = () => {\n        const svgElement = canvasRef.current;\n        if (!svgElement) return;\n\n        // Create a canvas\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const serializer = new XMLSerializer();\n        const svgStr = serializer.serializeToString(svgElement);\n\n        // Set width and height\n        canvas.width = svgElement.clientWidth;\n        canvas.height = svgElement.clientHeight;\n\n        const img = new Image();\n        img.src =\n            \"data:image/svg+xml;base64,\" +\n            window.btoa(unescape(encodeURIComponent(svgStr)));\n        img.onload = () => {\n            // Draw the image onto the canvas\n            ctx!.drawImage(img, 0, 0);\n            const canvasUrl = canvas.toDataURL(\"image/png\");\n\n            // Create a download link and click it\n            const downloadLink = document.createElement(\"a\");\n            downloadLink.download = \"whiteboard-screenshot.png\";\n            downloadLink.href = canvasUrl;\n            downloadLink.click();\n        };\n    };\n\n    return (\n        <>\n            <div className={styles.canvas}>\n                <SelectionTools\n                    isAnimated={\n                        canvasState.mode !== CanvasMode.Translating &&\n                        canvasState.mode !== CanvasMode.Resizing\n                    }\n                    camera={camera}\n                    setLastUsedColor={setLastUsedColor}\n                />\n                <svg\n                    ref={canvasRef}\n                    className={styles.renderer_svg}\n                    onWheel={onWheel} // NOTE: disable the scroll within canvas for now\n                    onPointerDown={onPointerDown}\n                    onPointerMove={onPointerMove}\n                    onPointerLeave={onPointerLeave}\n                    onPointerUp={onPointerUp}\n                >\n                    <g style={{ transform: `translate(${camera.x}px, ${camera.y}px)` }}>\n                        {layerIds.map((layerId) => (\n                            <LayerComponent\n                                key={layerId}\n                                id={layerId}\n                                mode={canvasState.mode}\n                                onLayerPointerDown={onLayerPointerDown}\n                                selectionColor={layerIdsToColorSelection[layerId]}\n                            />\n                        ))}\n                        <SelectionBox\n                            onResizeHandlePointerDown={onResizeHandlePointerDown}\n                        />\n                        {canvasState.mode === CanvasMode.SelectionNet &&\n                            canvasState.current != null && (\n                                <rect\n                                    className={styles.selection_net}\n                                    x={Math.min(canvasState.origin.x, canvasState.current.x)}\n                                    y={Math.min(canvasState.origin.y, canvasState.current.y)}\n                                    width={Math.abs(canvasState.origin.x - canvasState.current.x)}\n                                    height={Math.abs(\n                                        canvasState.origin.y - canvasState.current.y\n                                    )}\n                                />\n                            )}\n                        <MultiplayerGuides />\n                        {pencilDraft != null && pencilDraft.length > 0 && (\n                            <Path\n                                points={pencilDraft}\n                                fill={colorToCss(lastUsedColor)}\n                                x={0}\n                                y={0}\n                            />\n                        )}\n                    </g>\n                </svg>\n            </div>\n            <div>\n                <ToolsBar\n                    canvasState={canvasState}\n                    setCanvasState={setState}\n                    undo={history.undo}\n                    redo={history.redo}\n                    canUndo={canUndo}\n                    canRedo={canRedo}\n                    download={downloadSvgAsPng}\n                />\n            </div>\n        </>\n    );\n}\n","<script lang=\"ts\">\n    import Whiteboard from \"$lib/whiteboard/liveblocks-example/Whiteboard\";\n    import { LiveblocksProvider } from \"@liveblocks/react/suspense\";\n    import { used } from \"svelte-preprocess-react\";\n    import type { Props } from \"$lib/utils/ui-framework\";\n\n    used(LiveblocksProvider, Whiteboard);\n\n    const liveblocksProps: Props<typeof LiveblocksProvider> = {\n        publicApiKey: import.meta.env.VITE_LIVEBLOCKS_PUBLIC_API_KEY,\n    };\n\n    const whiteboardProps: Props<typeof Whiteboard> = {\n        roomID: \"test\",\n    };\n</script>\n\n<div class=\"w-screen h-screen\">\n    <react:LiveblocksProvider {...liveblocksProps}>\n        <react:Whiteboard {...whiteboardProps} />\n    </react:LiveblocksProvider>\n</div>\n"],"names":["LayerType","LayerType2","Side","CanvasMode","CanvasMode2","colorToCss","color","COLORS","connectionIdToColor","connectionId","resizeBounds","bounds","corner","point","result","findIntersectingLayersWithRectangle","layerIds","layers","a","b","rect","ids","layerId","layer","x","y","height","width","getSvgPathFromStroke","stroke","d","acc","x0","y0","i","arr","x1","y1","penPointsToPathLayer","points","left","top","right","bottom","pressure","pointerEventToCanvasPoint","camera","canvasElement","boundingBox","first","useSelectionBounds","selection","useSelf","me","useStorage","root","selectedLayers","shallow","HANDLE_WIDTH","SelectionBox","memo","onResizeHandlePointerDown","soleLayerId","isShowingHandles","_a","jsxs","Fragment","jsx","styles","e","urlAlphabet","nanoid","size","id","bytes","scopedUrlAlphabet","Ellipse","onPointerDown","selectionColor","$","u","h","se","l","he","R","B","ue","ge","de","A","G","ie","L","n","f","K","ee","C","xe","pe","V","ce","r","D","S","j","q","c","p","T","te","_","M","H","o","s","W","m","U","X","z","F","O","J","I","v","Z","le","fe","re","Y","be","ne","w","oe","P","k","Q","N","ae","_e","Path","fill","getStroke","Rectangle","LayerComponent","mode","onLayerPointerDown","ColorPicker","onChange","ColorButton","onClick","IconButton","children","isActive","disabled","useDeleteLayers","useMutation","storage","setMyPresence","liveLayers","liveLayerIds","index","SelectionTools","isAnimated","setLastUsedColor","moveToFront","indices","moveToBack","setFill","deleteLayers","selectionBounds","Cursor","cursor","useOther","user","Cursors","useOthersConnectionIds","Drafts","others","useOthersMapped","other","key","MultiplayerGuides","React","PencilButton","RectangleButton","EllipseButton","UndoButton","DownloadButton","RedoButton","SelectionButton","ToolsBar","canvasState","setCanvasState","undo","redo","canUndo","canRedo","download","useDisableScrollBounce","useEffect","MAX_LAYERS","Whiteboard","props","Room","Canvas","pencilDraft","setState","useState","setCamera","lastUsedColor","history","useHistory","useCanUndo","useCanRedo","canvasRef","useRef","onKeyDown","self","useCallback","initialBounds","insertLayer","layerType","position","LiveObject","insertPath","translateSelectedLayers","offset","resizeSelectedLayer","unselectLayers","startDrawing","continueDrawing","startMultiSelection","current","origin","updateSelectionNet","selections","layerIdsToColorSelection","useMemo","onWheel","onPointerMove","onPointerLeave","onPointerUp","downloadSvgAsPng","svgElement","canvas","ctx","svgStr","img","canvasUrl","downloadLink","react_whiteboard_spread_levels","get_spread_update","get_spread_object","react_liveblocksprovider_spread_levels","insert_hydration","target","div","anchor","liveblocksProps","define_import_meta_env_default","whiteboardProps"],"mappings":"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","x_google_ignoreList":[4,5,7]}